definitions:
  file.list.sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: file.list.dialog
      patterns:
        - Show file view
        - Show files of <folder>
        - Show file view of <folder>
        - Browse folder <folder>
        - Browse files of <folder>
      arguments:
        folder:
          type: Consoloid.FileList.Context.Folder
          pattern: of folder <value>
          required: false
  file.list.dialog:
    cls: Consoloid.FileList.Dialog.FileList
    shared: false
    options:
      name: Browsed folder
      list: '@file.list'
      defaultFolder: "/"
      responseTemplateId: Consoloid-FileList-Dialog-List

  file.list:
    cls: Consoloid.FileList.ListWidget
    options:
      dataSourceClass: Consoloid.FileList.DataSource
      dataSourceOptions: {}
      factoryClass: Consoloid.Ui.List.Factory.Collapsing
      factoryOptions:
        collapsedTemplateId: Consoloid-FileList-ItemCollapsed
        extendedTemplateId: Consoloid-FileList-ItemOpened
      listViewClass: Consoloid.Ui.List.View.BoundaryShowing
      listViewOptions:
        radius: 2
        numPerPage: 10
      scrollbarClass: Consoloid.Ui.List.Scrollbar.Base
      scrollbarOptions: {}

  file.list.path.absolutifier:
    cls: Consoloid.FileList.PathAbsolutifier
    shared: true

  file.list.welcome.info:
    cls: Consoloid.FileList.Dialog.Welcome
    shared: true

  file.delete.sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: file.delete.dialog
      patterns:
        - Delete
        - Remove
        - Delete <path>
        - Remove <path>
      arguments:
        path:
          type: Consoloid.FileList.Context.File
          pattern: path <value>
          required: false
        recursively:
          type: boolean
          pattern: recursively
          required: false
  file.delete.dialog:
    cls: Consoloid.FileList.Dialog.FileOperation.Delete
    shared: false

  folder.create.sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: folder.create.dialog
      patterns:
        - Create folder
        - Create new folder
        - New folder
        - Make directory
        - Create folder <path>
        - Create new folder <path>
        - New folder <path>
        - Make directory <path>
      arguments:
        path:
          type: string
          pattern: called <value>
          required: false
  folder.create.dialog:
    cls: Consoloid.FileList.Dialog.FileOperation.CreateFolder
    shared: false

  file.move.sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: file.move.dialog
      patterns:
        - Move
        - Rename
        - Move <source> to <target>
        - Rename <source> to <target>
      arguments:
        source:
          type: string
          pattern: from <value>
          required: true
        target:
          type: string
          pattern: to <value>
          required: true
        overwrite:
          type: boolean
          pattern: overwrite
          required: false
  file.move.dialog:
    cls: Consoloid.FileList.Dialog.FileOperation.CopyOrMove
    shared: false
    options:
      remoteMethod: "rename"
      sentenceText: "Move"

  file.copy.sentence:
    tags: [ "sentence" ]
    cls: Consoloid.Interpreter.Sentence
    options:
      service: file.copy.dialog
      patterns:
        - Copy
        - Copy <source> to <target>
      arguments:
        source:
          type: string
          pattern: from <value>
          required: true
        target:
          type: string
          pattern: to <value>
          required: true
        overwrite:
          type: boolean
          pattern: overwrite
          required: false
  file.copy.dialog:
    cls: Consoloid.FileList.Dialog.FileOperation.CopyOrMove
    shared: false
    options:
      remoteMethod: "copy"
      sentenceText: "Copy"
